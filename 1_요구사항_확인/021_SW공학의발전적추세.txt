S/W 공학의 발전적 추세

소프트웨어 재사용(Software Reuse)
- 이미 개발되어 인정받은 소프트웨어를 다른 소프트웨어 개발, 유지에 사용
- 품질과 생산성 높이기 위함 -> 개발 시간 단축, 비용 절감, 신뢰성 상승, 효율성 상승
- 기존 소프트웨어를 새 소프트웨어에 적용
- 방법
=> 합성 중심( = 블록 구성 방법 ) : 부품 즉 블록을 끼워 맞춰 완성
     생성 중심( = 패턴 구성 방법) : 명세를 구체화하여 만듦 

소프트웨어 재공학(Software Reengineering) 
- 기존의 시스템을 이용해 보다 나은 시스템 구축, 새로운 기능 추가해 소프트웨어 성능 향상
   -> 뼈대는 두고 리모델링하는 것 
   ( 재공학 : 문서를 수정한 뒤 소스 수정 / 역공학 : 소스만 가지고 문서를 만드는 것)
- 유지보수의생산성 향상
- 유지보수성과 품질 향상
- 이점 
=> 품질 향상, 생산성 증가, 수명 연장, 오류 감소

CASE(Computer Aided Software Engineering)
- 소프트웨어 개발 과정에서 과정 전체 또는 일부를 자동화
- 자동화 도구(CASE Tool) 임 -> 하나의 작업을 자동화하는 패키지를 의미
- 생명 주기 전체 단계를 연결하고 자동화하는 통합 도구 제공
- 개발도구와 방법론이 결합, 생산성 향상 구현
- 주요기능
=> 소프트웨어 생명 주기 전 단계의 연결, 다양한 소프트웨어 개발 모형 지원, 그래픽 지원