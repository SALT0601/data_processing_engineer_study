포인터

포인터의 개요
- C언어에서는 변수의 주소를 포인터라고 하고 포인터를 저장할 수 있는 변수를 포인터 변수라 한다.
  변수의 주소인 포인터는 출력할 수도 있고 포인터가 가르키는 곳에 값을 저장하거나 읽어 오는 등 다양한 조작이 가능하다. 
- int a; -> 일반 변수 / int *a; -> 포인터 변수
- *은 선언할 때는 포인터 변수인걸 알려주는 역할을 하고 그외에는 포인터가 가르키는 메모리를 직접 가르킨다.
- 주소를 받기 때문에 일반 변수를 저장하려면 &을 이용해 일반 변수의 주소를 뽑아 대입시켜야 한다.
- ex. int b = 3; int *c; c = &b -> 이렇게 하지 않으면 b의 값을 주소로 생각해 오류가 난다.
- int a[] = {1, 2, 3} 배열에서 그냥 a란 배열 변수 이름은 배열의 시작 지점을 가리킴. 즉 a == &a[0], 주소를 가리킴. 그래서 일종의 포인터 변수
- int *b; b = a; b[0] == *b -> 1, printf(*(b+1)); -> b[1] == *(b+1) 즉 2임. 그래서 a의 배열 인덱스를 그대로 쓸 수 있음
- 즉 char *c = "agaile"; 이라고도 쓸 수있음. 문자열도 배열이기때문에 배열의 주소를 가리킴
- %s는 주소를 직접 받아 해당 주소부터 널값(\0) 있는 곳까지 모든 글자를 출력함 - 공백이랑 다름
- 문자열이 메모리에 저장될때는 아스키코드로 저장됨 그래서 KOREA라는 문자열이 있고 *p +2 면 *p즉 K에 2를 더한것으로 75 + 2 라 77을 출력해 M이 출력됨
- 아스키코드 A==65 부터 시작 / 소문자인 a == 97부터 시작
- 정수형 포인터 배열은 배열에 주소값을 저장해서 a[1] 하면 배열에 저장된 주소값이 나옴