객체지향 분석 및 설계

객체지향 분석(OOA; Object Oriented Analysis)
- 사용자의 요구사항과 관련된 객체, 속성, 연산, 관계 등 정의해 모델링
- 개발을 위한 업무를 객체와 속성, 클래스와 멤버, 전체와 부분 등으로 나눠 분석
- 클래스별 식별하는 것이 주요 목적

객체지향 분석의 방법론
- Rumbaugh(럼바우) 방법 : 분석활동을 객체 모델, 동적 모델, 기능 모델로 나누어 수행
- Booch(부치) 방법 : 미시적 개발 프로세스와 거시적 개발 프로세스 모두 사용, 클래스와 객체들 부석 및 식별하고 클래스의 속성과 연산 정의
- Jacobson 방법 : 유스케이스 강조해 사용
- Coad와 Yourdon 방법 : E-R 다이어그램 사용해 객체의 행위 모델링, 객체 식별, 구조 식별, 주제 정의, 속성과 인스턴스 연결 정의, 연산과 메시지 연결 정의 등의 과정으로 구성
- Wirfs-Brock 방법 : 분석과 설계 간 구분이 없고, 고객 명세서를 평개해 설계 작업까지 연속적으로 수행

럼바우의 분석 기법 = 객체 모델링 기법(OMT) (객->동->기)
- 모든 소프트웨어 구성 요소를 그래픽 표기법을 이용해 모델링
- 분석 활동은 객체 모델링 -> 동적 모델링 -> 기능 모델링 순
- 객체 모델링 = 정보 모델링 : 시스템에서 요구되는 객체 찾아내 속성과 연산 식별 및 객체들 간 관계 규정해 객체 다이어그램으로 표시
- 동적 모델링 : 상태 다이어그램 이용해 시간의 흐름에 따른 객체들 간 제어 흐름, 상호 작용, 동작 순서 등 동적 행위 표현
- 기능 모델링 : 자료 흐름도를 이용해 다수의 프로세스들 간 자료 흐름을 중심으로 처리 과정 표현

객체지향 설계 원칙 = SOLID 원칙
- 변경이나 확장에 유연한 시스템을 설계하기 위해 지켜야할 원칙
- 단일 책임 원칙(SRP) : 객체는 단 하나의 책임만 가져야 함
- 개방-폐쇄 원칙(OCP) : 기존 코드 변경하지 않고 기능 추가할 수 있도롤 설계
- 리스코프 치환 원칙(LSP) : 자식 클래스는 최소한 부모 클래스의 기능은 수행할 수 있어야 함
- 인터페이스 분리 원칙(ISP) : 자신이 사용하지 않는 인터페이스와 의존 관계를 맺거나 영향 받지 않아야 함
- 의존 역전 원칙(DIP) : 의존 관계 성립 시 추상성이 높은 클래스와 의존 관계 맺어야 함
