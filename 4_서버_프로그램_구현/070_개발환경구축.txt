개발 환경 구축
- 개발 프로젝트를 이해하고 소프트웨어 및 하드웨어 장비를 구축하는 것
- 응용 소프트웨어가 운영될 환경과 유사한 구조로 구축
- 분석 단계의 산출물을 바탕으로 개발에 필요한 하드웨어와 소프트웨어를 선정
- 하드웨어와 소프트웨어의 성능, 편의성, 라이선스 등 비즈니스 환경에 적합한 제품들을 최종적으로 결정해 구축

하드웨어 환경
- 사용자와의 인터페이스 역할 하는 클라이언트, 클라이언트와 통신해 서비스를 제공하는 서버로 구성
- 클라이언트 종류 : 개인용 컴퓨터, 스마트폰 등
- 서버 종류
-> 웹 서버 : 클라이언트로부터 직접 요청 받아 처리, 저용량 정적파일들 제공
    웹 애플리케이션 서버(WAS) : 동적 서비스 제공, 웹서버와 디비 서버 또는 웹서버와 파일 서버 사이에서 인터페이스 역할 수행
    데이터베이서 서버 : 디비와 이를 관리하는 DBMS 운영
    파일 서버 : 디비에 저장하기에는 비효율적, 서비스 제공을 목적으로 유지하는 파일들 저장

소프트웨어 환경
- 클라이언트와 서버 운영을 위한 시스템 소프트웨어와 개발에 사용되는 개발 소프트웨어로 구성
- 시스템 소프트웨어의 종류 : 운영체제(OS), 웹서버 및 WAS 운용을 위한 서버 프로그램, DBMS 등
- 개발 소프트웨어 종류
-> 요구사항 관리 도구 : 요구사항의 수집과 분석, 추적 등 편리하게 도와주는 소프트웨어
    설계/모델링 도구 : UML을 지원, 개발의 전 과정에서 설계 및 모데링 언어 도와주는 소프트웨어
    구현 도구 : 개발 언어를 통해 애플리케이션 실제 구현을 지원하는 소프트웨어
    빌드 도구 : 구현 도구를 통해 작성된 소스의 빌드 및 배포, 라이브러리 관리 지원하는 소프트웨어
    테스트 도구 : 모듈들이 요굿항에 적합하게 구현됐는지 테스트하는 소프트웨어
    형상 관리 도구(버전 관리) : 산출물들을 버전별로 관리해 품질 향상을 지원하는 소프트웨어

웹 서버의 기능
- HTTP/HTTPS 지원 : 브라우저로부터 요청 받아 응답할 때 사용되는 프로토콜
- 통신기록 : 처리한 요청들 로그 파일로 기록
- 정적 파일 관리 : HTML, CSS, 이미지 등 정적 파일들 저장하고 관리
- 대역폭 제한 : 네트워크 트래픽 포화 방지위해 응답 속도 제한
- 가상 호스팅 : 하나의 서버로 여러 개 도메인 이름 연결
- 인증 : 사용자가 합법적 사용자인지 확인

개발 언어의 선정 기준
- 적성성 : 개발하려는 소프트웨어 목적에 적합
- 효율성 : 코드의 작성 및 구현이 효율적
- 이식성 : 다양한 시스템 및 환경에 적용 가능
- 친밀성 : 개발 언어에 대한 개발자들의 이해도와 활용도 높음
- 범용성 : 다른 개발 사례가 존재하고 여러 분야에서 활용되고 있어야 함
