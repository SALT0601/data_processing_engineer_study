인터페이스 구현 검증
- 인터페이스가 정상적으로 문제없이 작동하는지 확인
- 검증도구(입출력값이 예상과 일치하는지 확인)와 감시도구(외부시스템과 연결 모듈 사이에서 정상적으로 동작하는지 확인) 이용해 인터페이스의 동작 상태 확인

인터페이스 구현 검증 도구
- 인터페이스 단위 기능과 시나리오 등을 기반으로 하는 통합 테스트 필요
- 테스트 자동화 도구
-> xUnit : Java(Junit), C++(Cppunit), .Net(Nunit) 등 다양한 언어를 지원하는 단위 테스트 프레임워크
    STAF : 서비스 호출 및 컴포넌트 재사용 등 다양한 환경 지원
           : 크로스 플랫폼이나 분산 소프트웨어에서 테스트 환경 조성가능 하도록 지원
           : 분산 소프트웨어의 경우 각 분산 환경에 설치된 데몬이 프로그램 테스트에 대한 응답 대신하며 테스트 완료되면 이를 통합하고 자동화해 프로그램 완성
    FitNesse : 웹 기반 테스트 케이스 설계, 실행, 결과 확인 등 지원
    NTAF : FitNesse의 장점인 협업 기능과 STAF의 장점인 재사용 및 확장성을 통합한 NHN(Naver)의 테스트 자동화 프레임워크
    Selenium : 다양한 브라우저 및 개발 언어 지원하는 웹 애플리케이션 테스트 프레임워크
    Watir : Ruby 를 사용하는 애플리케이션 테스트 프레임워크

인터페이스 구현 감시 도구
- 인터페이스 동작 상태는 APM(애플리케이션 성능 관리)을 사용해 감시할 수 있음
- APM을 통해 디비와 웹 애플리케이션의 트랜잭션, 변수값, 호출 함수, 로그 및 시스템 부하 등 종합적인 정보를 조회 분석 가능
- 대표 APM
-> 스카우터(Scouter) : 애플리케이션 및 OS 자원에 대한 모니터링 기능 제공하는 오픈소스 APM
-> 제니퍼(Jennifer) : 애플리케이션 개발부터 테스트, 오픈, 운영, 안정화까지 전 단계에 걸쳐 성능 모니터링하고 분석

APM(Application Performance Management/Monitoring)
- 애플리케이션의 성능 관리를 위해 다양한 모니터링 기능 제공하는 도구
- 리소스 방식 : Nagios, Zabbix, Cacti 등
- 엔드투엔드(End-to-End) 방식 : VisualVM, 제니퍼, 스카우터 등