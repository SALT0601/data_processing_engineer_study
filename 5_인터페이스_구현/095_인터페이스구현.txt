인터페이스 구현
- 송수신 시스템 간 데이터 교환 및 처리를 실현해 주는 작업
- 구현 방법 : 데이터 통신을 이용한 인터페이스 구현, 인터페이스 엔티티를 이용한 인터페이스 구현

데이터 통신을 이용한 인터페이스 구현
- 애플리케이션 영역에서 데이터 포맷을 인터페이스 대상으로 전송하면 이를 수신 측에서 파싱하여 해석
- 주로 JSON이나 XML 형식의 데이터 포맷 사용해 인터페이스 구현
- JSON 이용한 인터페이스 구현 순서
-> 1. 송신 측에서 인터페이스 객체를 생성할 데이터를 각 시스템 환경에 맞게 선택
    2. JSON 이용해 데이터를 인터페이스 객체를 만듦
    3. 인터페이스 객체를 AJAX 등 이용해 수신 측으로 보냄
    4. 수신 측에서 인터페이스 객체를 수신해 파싱한 후 처리
    5. 수신 측에서 송신 측으로 처리 결과 보냄

인터페이스 엔티티를 이용한 인터페이스 구현
- 인터페이스가 필요한 시스템 사이에 별도의 인터페이스 엔티티 두어 상호 연계
- 보통 인터페이스 테이블을 엔티티로 활용
- 인터페이스 테이블 이용한 인터페이스 구현 순서
-> 1. 송신 측에서 인터페이스 이벤트 발생하면 인터페이스 테이블에 인터페이스 데이터 기록(삽입만 가능하고 수정, 삭제 불가)
    2. 송신 측 인터페이스 테이블에서 정해진 주기에 따라 인터페이스 데이터 전송
    3. 수신 측 인터페이스 테이블에 인터페이스 데이터 입력되면 정해진 주기에 따라 인터페이스 데이터 읽음
    4. 수신 측 인터페이스 테이블에 인터페이스 데이터 읽은 후 사전에 정의된 데이터 트랜잭션 수행
    
JSON(JavaScript Object Notation)
- 용량이 적은 데이터 교환을 위해 데이터 객체를 속성.값의 쌍 형태로 표현하는 개방형 표준 포맷
- 비동기 처리에 사용되는 AJAX에서 XML 대체해 사용

AJAX(Asynchronous JavaScript and XML)
- 자바스크립트 사용해 클라이언트와 서버 간 XML 데이터 주고 받는 비동기 통신 기술
- 전체 페이지 새로 고침 안해도 웹 페이지 일부 영역만 업데이트 가능