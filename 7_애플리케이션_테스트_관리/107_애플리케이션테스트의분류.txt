애플리케이션 테스트의 분류

프로그램 실행 여부에 따른 테스트
- 정적 테스트 : 프로그램을 실행하지 않고 명세서나 소스 코드를 대상으로 분석하는 테스트
                 : 소스 코드에 대한 코딩 표준, 코딩 스타일, 코드 복잡도, 남은 결함 등 발견하기 위해 사용
                 : 종류 - 워크스루, 인스팩션, 코드 검사 등
- 동적 테스트 : 프로그램 실행해 오류 찾는 테스트
                 : 소프트웨어 개발의 모든 단계에서 수행
                 : 종류 - 블랙박스 테스트, 화이트박스 테스트

테스트 기반에 따른 테스트
- 명세 기반 테스트 : 사용자의 요구사항에 대한 명세 빠짐없이 테스트 케이스로 만들어 구현하고 있는지 확인
                       : 종류 - 동등분할, 경계 값 분석 등
- 구조 기반 테스트 : 소프트웨어 내부의 논리 흐름에 따라 테스트 케이스를 작성하고 확인하는 테스트
                        : 종류 - 구문 기반, 결정 기반, 조건 기반 등
- 경험 기반 테스트 : 유사 소프트웨어나 기술 등에 대한 테스터의 경험을 기반으로 수행하는 테스트
                        : 사용자의 요구사항에 대한 명세가 불충분하거나 테스트 시간에 제약이 있는 경우 수행하면 효과적
                        : 종류 - 에러 추정, 체크리스트, 탐색적 테스팅

시각에 따른 테스트
- 검증 테스트 : 개발자 시각에서 제품의 생산 과정 테스트, 제품이 명세서대로 완성됐는지 테스트
- 확인 테스트 : 사용자의 시각에서 생산된 제품의 결과 테스트, 사용자가 요구한대로 제품 완성됐는지, 제품이 정상적으로 동작되는지 테스트

목적에 따른 테스트
- 회복 테스트 : 시스템에 여러 결함 주어 실패하도록 한 후 올바르게 복구되는지 확인
- 안전 테스트 : 시스템에 설치된 시스템 보호 도구가 불법적인 침입으로부터 시스템을 보호할 수 있는지 확인
- 강도 테스트 : 시스템에 과도한 정보령이나 빈도 등 부과해 과부하 시에도 소프트웨어 정상적으로 실행되는지 확인
- 성능 테스트 : 소프트웨어의 실시간 성능이나 전체적인 효율성 진단한느 테스트, 소프트웨어 응답시간, 처리량 등
- 구조 테스트 : 소프트웨어 내부의 논리적 경로, 소스 코드의 복잡도 등 평가
- 회귀 테스트 : 소프트웨어의 변경 또는 수정된 코드에 새로운 결함이 없음을 확인
- 병행 테스트 : 변경된 소프트웨어와 기존 소프트웨어에 동일한 데이터 입력해 결과 비교
