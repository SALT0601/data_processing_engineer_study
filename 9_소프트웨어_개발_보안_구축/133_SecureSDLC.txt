Secure SDLC
- SDLC에 보안 강화를 위한 프로세스를 포함한 것
- 대표적인 방법론
-> CLASP : SDLC의 초기 단계에서 보안을 강화하기 위해 개발된 방법론
-> SDL : 마이크로소프트 사에서 기존의 SDLC 개선
-> Seven Touchpoints : 소프트웨어 보안의 모범사례를 SDLC에 통합한 방법론

SDLC 단계별 보안 활동
- 요구사항 분석 단계 : 보안 항목에 해당하는 요구사항 식별
-> 설계 단계 : 식별된 보안 요구사항들을 소프트웨어 설계서에 반영, 보안 설계서 작성
-> 구현 단계 : 보안 가이드 준수하며 설계서에 따라 보안 요구사항 구현
-> 테스트 단계 : 설계 단계에서 작성한 보안 설계서 바탕으로 보안 사항들 점검
-> 유지보수 단계 : 이전 과정 모두 수행하였음에도 발생할 수 있는 보안사고들 식별, 사고 발생 시 해결하고 보안 패치 실시

소프트웨어 개발 보안 요소
- 기밀성 : 시스템 내 정보와 자원은 인가된 사용자에게만 접근 허용, 정보가 전송 중 노출되더라도 데이터 읽을 수 없음
- 무결성 : 시스템 내 정보는오직 인가된 사용자만 수정 가능
- 가용성 : 인가받은 사용자는 시스템 내 정보와 자원 언제라도 사용 가능
- 인증 : 사용자가 합법적인 사용자인지 확인하는 모든 행위(대표 ; 패스워드, 인증용 카드, 지문 검사 등)
- 부인방지 : 데이터 송수신 자가 송수신 사실을 부인할 수 없도록 송수신 증거 제공

시큐어 코딩
- 구현 단계에서 발생할 수 있는 보안 취약점 최소화하기 위해 보안 요소들을 고려하며 코딩하는 것
- 사전 대응해 안정성과 신뢰성 확보
