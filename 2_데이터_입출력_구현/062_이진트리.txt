이진 트리
- 차수가 2 이하인 노드들로 구성된 트리
- 이진 트리의 레벌 i에서 최대 노드의 수는 2^i-1
- 터미널 노드수가 n0, 차수가 2인 노드 수가 n2라 할때 n0 = n2+1

트리의 운행법(먼저 서브트리 단위로 묶는다)
- 각 노드들 찾아가는 방법을 운행법이라 함
- 이진트리 운행법은 산술식 표기법과 연관성 갖음
- Preorder운행/Inorder운행/Postorder운행 3가지 (루트 위치에따라 다름)

Preorder 운행법
- 이진 트리를 Root -> Left -> Right 순으로 운행

Inorder 운행법
- 이진 트리를 Left -> Root -> Right 순으로 운행

Postorder 운행법 
- 이진 트리를 Left -> Right -> Root 순으로 운행

수식의 표기법
- 이진트리로 만든 수식을 인오더, 프리오더, 포스트오더로 운행하면 각각 중위(Infix), 전위(Prefix), 후위(Postfix) 표기법이 됨
- 전위 표기법 : 연산자 -> Left -> Right 
- 중위 표기법 : Left -> 연산자 -> Right 
- 후위 표기법 : Left -> Right -> 연산자
- 중위를 후위나 전위 표기로 바꾸기(후위나 전위는 스택 이용하므로 중위는 후위나 전위로 바꾸어 처리)
-> 전위로 변환
     1. 연산 우선순위에 따라 괄호로 묶음
     2. 연산자를 해당 괄호 앞(왼쪽)으로 옮김
     3. 필요없는 괄호 제거
-> 후위로 변환
     1. 연산 우선순위에 따라 괄호로 묶음
     2. 연산자를 해당 괄호 뒤(오른쪽)으로 옮김
     3. 필요없는 괄호 제거
- 후위나 전위를 중위로 바꾸기
-> 후위 -> 중위 (연산자를 피연산자 두개의 가운데로 옮기면 됨)
     1. 인접한 피연산자 두개와 오른쪽의 연산자를 괄호로 묶음
     2. 연산자를 해당 피연산자의 가운데로 이동
     3. 필요없는 괄호 제거
-> 전위 -> 중위 (연산자를 피연산자 두개의 가운데로 옮기면 됨)
     1. 인접한 피연산자 두개와 왼쪽의 연산자를 괄호로 묶음
     2. 연산자를 해당 피연산자의 가운데로 이동
     3. 필요없는 괄호 제거
   
     