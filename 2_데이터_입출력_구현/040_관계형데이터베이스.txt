관계형 데이터베이스의 구조/ 관계형 데이터 모델

관계형 데이터베이스
- 2차원적 표를 이용해 데이터 상호 관계를 정의하는 데이터베이스
- 코드에 의해 제안
- 개체와 관계를 모두 릴레이션이라는 표로 표현해 개체를 표현하는 개체 릴레이션, 관계를 표현하는 관계 릴레이션 존재
- 장점 : 간결, 다른 데이터베이스로의 변환 용이
- 단점 : 성능이 다소 떨어짐

관계형 데이터베이스의 릴레이션 구조
- 구조를 나타내는 릴레이션 스키마와 실제 값들인 릴레이션 인스턴스로 구성 

튜플(Tuple) 
- 릴레이션을 구성하는 각각의 행
- 속성의 모임으로 구성
- 파일 구조에서 레코드와 같은 의미
- 튜플의 수 = 카디널리티Cardinality) = 기수 = 대응수

속성
- 데이터베이스를 구성하는 가장 작은 논리적 단위
- 파일 구조상의 데이터 항목 , 데이터 필드에 해당
- 개체의 특성을 기술
- 속성의 수 = 디그리 = 차수

도메인(Domain)
- 하나의 애트리뷰트(속성)가 취할 수 있는 같은 타입의 원자값들의 집합 (ex. 성별 - 남과여)

릴레이션의 특징
- 한 릴레이션에 똑같은 튜플 포함 불가능 -> 릴레이션에 포함된 튜플은 모두 상이
- 한 릴레이션에 포함된 튜플 사이에는 순서 없음
- 튜플들의 삽입, 삭제 등 작업으로 릴레이션은 시간에 따라 변함
- 릴레이션 스키마를 구성하는 속성들 간의 순서는 중요하지 않음
- 속성의 유일한 식별을 위해 속성의 명칭은 유일해야 하지만 속성을 구성하는 값은 동일값 가능
- 속성들의 부분집합을 키로 설정
- 속성의 값은 논리적으로 더 이상 쪼갤 수 없는 원자값만을 저장

관계형 데이터 모델
- 2차원 표를 이용해서 데이터 상호 관계를 정의하는 DB구조
- 가장 널리 사용되는 데이터 모델
- 파일 구조처럼 구성한 테이블들을 하나의 DB로 묶어 테이블 내 있는 속성들 간 관계 설정 혹은 테이블 간의 관계 설정
-> 데이터 상호 간의 관계를 표현, 데이터베이스에 저장된 데이터를 테이블 형태로 표현한 것
- 기본키와 이를 참조하는 외래키로 데이터 관계 표현
- 계층 모델과 망 모델의 복잡한 구조를 단순화시킨 모델
- 관계형 모델의 대표적 언어는 SQL
- 일대일, 일대다, 다대일 관계를 자유롭게 표현 가능