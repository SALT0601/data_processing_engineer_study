관계대수 및 관계해석
- 관계 데이터베이스를 처리하는 기능과 능력면에서 동등, 관계대수로 표현한 식은 관계해석으로 표현 가능

관계대수
- 원하는 정보와 그 정보를 검색하기 위해 어떻게 유도하는가를 기술하는 절차적인 언어
- 릴레이션을 처리하기 위해 연산자와 연산규칙 제공, 피연산자와 연산 결과가 모두 릴레이션
- 질의에 대한 해를 구하기 위해 수행해야 할 연산의 순서 명시
- 특별히 개발한 순수 관계 연산자와 수학적 집합 이론에서 사용하는 일반 집합 연산자

순수 관계 연산자
- Select(σ-시그마) - 릴레이션에 존재하는 튜플 중 선택 조건을 만족하는 튜플의 부분집합 구해 새 릴레이션 만듦
           - 행에 해당한느 튜플을 구하는 것이라 수평 연산이라고도 함
- Project(π-파이) - 속성 리스트에 제시된 속성 값만 추출해 새 릴레이션 만듦
            - 중복 발생하면 중복 제거
            - 열에 해당하는 속성 추출해 수직 연산자라고도 함
- Join(나비넥타이 모양) - 공통 속성을 중심으로 두 개의 릴레이션을 하나로 합쳐 새로운 릴레이션 만듦
                             - 결과는  Cartesian Product(교차곱)을 수행한 다음 Select를 수행한 것
                             - 교차곱은 모든 튜플들 대응시켜 새로운 릴레이션 만드는 것, 그 결과 차수는 두 릴레이션의 차수 합한것, 튜플은 두 튜플 곱한것
- Division(÷) - X⊃Y인 두 릴레이션 중 X의 속성이 Y의 속성값을 모두 가진 튜플에서 Y사 가진 속성을 제외한 속성만 구함

일반 집합 연산자
- 수학적 집합 이론에서 사용하는 연산자`
- 합집합(UNION), 교집합(INTERSECTION), 차집합(DIFFERENCE)을 처리하기 위해선 합병 조건 만족( 두 릴레이션 간 속성 수 같고 대응되는 속성별로 도메인 같아야함. 속성 이름이 같은건 아님)
- 합집합(∪) - 합집합 구하고 결과로 생성된 릴레이션에서 중복되는 튜플 제거 - 카디널리티는 두 릴레이션의 카디널리티의 합보다 크지 않음
- 교집합(∩) - 교집합 구함, 동시에 존재하는 튜플 - 두 릴레이션 중 카디널리티가 적은 릴레이션의 카디널리티보다 크지 않음
- 차집합(-) - 차잡합 구함(R에는 존재 S에는 없는 튜플 있음) - R의 카디널리티보다 크지 않음
- 교차곱(X) - 두 릴레이션에 있는 튜플들의 순서쌍 구함 - 디그리는 두 디그리 더한것 카디널리티는 곱한것

관계해석
- 관계 데이터의 연산을 표현하는 방법
- 제안자는 코드 - 수학의 술어해석에 기반
- 원하는 정보가 무엇이라는 것만 정의하는 비절차적 특성
- 원하는 정보 정의 시 계산 수식 사용
