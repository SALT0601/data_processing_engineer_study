트랜잭션 분석/CRUD 분석

트랜잭션(Transaction)
- 논리적 기능을 수행하기 위한 작업의 단위 또는 한꺼번에 모두 수행되어야 할 인련의 연산
- 데이터베이스 시스템에서 병행 제어 및 회복 작업 시 처리되는 작업의 논리적 단위로 사용
- 사용자가 시스템에 대한 서비스 요구 시 시스템이 응답하기 위한 상태 변환 과정의 작업 단위로 사용

트랜잭션의 특성(ACID)
- Atomicity(원자성) : 트랜잭션의 연산은 데베에 모두 반영되도록 완료(Commit)되든지 혹은 전혀 반양되지 않도록 복구(Rollback)되어야 함
- Consistency(일관성) : 실행을 성공적으로 완료하면 언제나 일관성 있는 데베 상태로 변환
- Isolation(독립성, 격리성, 순차성) : 둘 이상의 트랜잭션이 동시 병행 실행되는 경우어느 하나의 트랜잭션 실행중에 다른 트랜잭션의 연산이 끼어들 수 없음
- Durability(영속성, 지속성) : 성공적으로 완료된 트랜잭션의 결과는 시스템이 고장나더라도 영구적으로 반영

CRUD 분석
- 프로세스와 테이블 간 CRUD 매트릭스를 만들어 트랜잭션을 분석
- 많은 트랜잭션이 몰리는 테이블을 파악할 수 있어 디스크 구성 시 유용한 자료로 활용 가능
- CRUD 매트릭스
-> 차원 형태의 표, 행에는 프로세스, 열에는 테이블, 행과 열이 만나는 위치에는 프로세스가 테이블에 발생시키는 변화를 표시해 프로세스와 데이터 간 관계 분석하는 분석표
-> 트랜잭션이 테이블에 수행하는 작업 검증
-> 각 셀에 Create, Read, Update, Delete의 앞 글자 들어감, 복수의 변화 줄 때는 기본적으로 C>D>U>R의 우선순위 적용해 한가지만 적음, 활용 목적에 따라 모두 기록
-> CRUD 매트릭스 완성되면 C,R,U,D 중 어느것도 적히지 않은 행이나 열, C,R이 없는 열 확인해 불필요하거나 누락된 테이블 또는 프로세스 찾음

트랜잭션 분석
-  CRUD 매트릭스를 기반으로 테이블에 발생하는 트랜잭션 양 분석해 테이블에 저장되는 데이터 양 유추, 이를 근거로 DB의 용량 산정 및 구조 최적화 목적
- 업무 개발 담당자가 수행
- 프로세스가 과도하게 접근하는 테이블 확인할 수 있고 이러한 집중 접근 테이블을 여러 디스크에 분산 배치해 디스크 입출력 향상을 통한 성능 향상
- 트랜잭션 분석서
-> 단위 프로세스와  CRUD 매트릭스 이용해 작성
-> 구성 요소 : 단위 프로세스,  CRUD 연산, 테이블명, 컬럼명, 테이블 참조 횟수, 트랜잭션 수, 발생 주기 등 
