자료 구조
- 자료를 기억장치의 공간 내 저장하는 방법과 자료 간의 관계, 처리 방법등을 연구 분석하는 것
- 저장공간의 효율성과 실행시간 단축을 위해 사용
- 분류
-> 선형구조(순서있음) - 배열/선형 리스트(연속리스트/연결리스트)/스택/큐/데크
-> 비선형 구조(순서없음) - 트리/그래프

배열(Array)
- 크기와 타입이 동일한 자료들이 순서대로 나열된 자료의 집합
- 반복적 데이터 처리 작업에 적합
- 정적 자료구조, 기억장소의 추가 어려움
- 데이터 삭제 시 기억장소가 빈 공간으로 남아있어 메모리 낭비 발생

연속 리스트(Contiguous List)
- 연속되는 기억장소에 저장되는 자료 구조
- 중간에 데이터 삽입하기 위해서는 연속된 빈 공간 있어야 함
- 삽입 삭제 시 자료의 이동 필요

연결 리스트(Linked List)
- 자료들을 임의의 기억공간에 기억시키되 순서에 따라 노드(자료저장-Data부분/포인터-Link부분)의 포인터(현재 위치에서 다음 노드 위치 알려줌) 부분을 이용해 서로 연결시킨 자료구조
- 연결을 위한 링크(포인터) 부분이 필요해 기억 공간의 이용 효율 좋지 않음
- 접근 속도 느리고 연결 끊어지면 다음 노드 찾기 어려움

스택(Stack)
- 리스트의 한쪽 끝으로만 자료 삽입, 삭제 이루어짐
- 후입선출(LIFO; Last In First Out) 방식
- 저장할 기억 공간 없는 상태에서 데이터 삽입되면 오버플로 발생
- 삭제할 데이터가 없는 상태에서 데이터 삭제하면 언더플로 발생

큐(Queue)
- 리스트의 한쪽에서는 삽입, 다른 한쪽에서는 삭제
- 선입선출(FIFO; First In First Out) 방식
- 시작을 표시하는 프런트 포인터와 끝을 표시하는 리어 포인터 있음

그래프(Graph)
- 정검(Vertex, 노드)와 간선(Edge) 두 집합으로 이루어짐
- 사이클이 없는 그래프를 트리라 함
- 간선의 방향성 유무에 따라 방향 그래프와 무방향 그래프로 구분

방향/무방향 그래프의 최대 간선 수 (n은 정점의 개수)
- 방향 그래프 최대 간선 수 : n(n-1)
- 무방향 그래프 최대 간선 수 : n(n-1)/2